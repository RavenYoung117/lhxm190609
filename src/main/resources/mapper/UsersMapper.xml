<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.qf.entity.Users">
    <id column="u_id" jdbcType="BIGINT" property="uId" />
    <result column="phone" jdbcType="BIGINT" property="phone" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="icon_url" jdbcType="VARCHAR" property="iconUrl" />
    <result column="uname" jdbcType="VARCHAR" property="uname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="BIGINT" property="gender" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="self" jdbcType="VARCHAR" property="self" />
    <result column="state" jdbcType="BIGINT" property="state" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Base_Column_List">
    u_id, phone, code, icon_url, uname, password, gender, birthday, self, state, money, 
    email
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where u_id = #{uId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from users
    where u_id = #{uId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.qf.entity.Users">
    insert into users (u_id, phone, code, 
      icon_url, uname, password, 
      gender, birthday, self, 
      state, money, email)
    values (#{uId,jdbcType=BIGINT}, #{phone,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, 
      #{iconUrl,jdbcType=VARCHAR}, #{uname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=BIGINT}, #{birthday,jdbcType=DATE}, #{self,jdbcType=VARCHAR}, 
      #{state,jdbcType=BIGINT}, #{money,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.entity.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        u_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="iconUrl != null">
        icon_url,
      </if>
      <if test="uname != null">
        uname,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="self != null">
        self,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        #{uId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="iconUrl != null">
        #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="uname != null">
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=BIGINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="self != null">
        #{self,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIGINT},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.entity.Users">
    update users
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="iconUrl != null">
        icon_url = #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="uname != null">
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=BIGINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="self != null">
        self = #{self,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=BIGINT},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where u_id = #{uId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.entity.Users">
    update users
    set phone = #{phone,jdbcType=BIGINT},
      code = #{code,jdbcType=VARCHAR},
      icon_url = #{iconUrl,jdbcType=VARCHAR},
      uname = #{uname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIGINT},
      birthday = #{birthday,jdbcType=DATE},
      self = #{self,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIGINT},
      money = #{money,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR}
    where u_id = #{uId,jdbcType=BIGINT}
  </update>
</mapper>